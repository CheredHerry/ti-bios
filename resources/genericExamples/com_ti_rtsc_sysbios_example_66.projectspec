<?xml version="1.0" encoding="UTF-8"?>
<projectSpec>
           <applicability>
               <when>
                    <context
                       deviceFamily="ARM"
                       deviceId=".*LM4.*"
                       toolChain="TI"
                    />
               </when>
            </applicability>
           <applicability>
               <when>
                    <context
                       deviceFamily="ARM"
                       deviceId=".*LM3.*"
                       toolChain="TI"
                    />
               </when>
            </applicability>

     <project
         title="Task Mutex Example (separate config project)"
                 description="This example shows the use of two tasks and one semaphore to protect data access using a separate project for SYS/BIOS configuration. The benefit of having a separate config project is that several applications can reference the same SYS/BIOS configuration. This helps save on build times and allows a team to share a SYS/BIOS config set up by a system integrator.">
                 <property name="type" value="rtsc"/>
                 <property name="products" value="com.ti.rtsc.SYSBIOS"/>
                 <property name="platform" value="ti.platforms.stellaris:$DeviceId$"/>
                 <property name="buildProfile" value="release"/>
                 <property name="isHybrid" value="false"/>
                 <property name="configuroOptions" value="--compileOptions &quot;-g --optimize_with_debug&quot;"/>
                 <group id="ti.sysbios.examples.root.generic"/>
                 <file path="ti/sysbios/examples/generic/mutex/mutex.c" openOnCreation="true" excludeFromBuild="false">
                 </file>
                 <file path="ti/sysbios/examples/generic/mutex/mutex.cfg" openOnCreation="false" excludeFromBuild="false">
                 </file>
                 <file path="ti/sysbios/examples/makefile.defs" openOnCreation="false" excludeFromBuild="false">
                 </file>
     </project>



</projectSpec>

